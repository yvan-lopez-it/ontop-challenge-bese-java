{
	"info": {
		"_postman_id": "f33b3737-6a82-4587-ba4e-94d5e8082e1b",
		"name": "Ontop Challenge BE Java",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "501348"
	},
	"item": [
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Perform tx",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": 1,\r\n    \"recipientId\": 1,\r\n    \"amount\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/api/transactions/perform",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"transactions",
								"perform"
							]
						}
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{localhost}}/api/recipients/1",
									"host": [
										"{{localhost}}"
									],
									"path": [
										"api",
										"recipients",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 02 Sep 2023 13:26:43 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"firstName\": \"Jemimah\",\n    \"lastName\": \"MacShane\",\n    \"routingNumber\": \"326047655\",\n    \"nationalIdNumber\": \"094375570\",\n    \"accountNumber\": \"2792399946\",\n    \"accountCurrency\": \"USD\",\n    \"bankName\": \"Ledner and Sons Bank\",\n    \"transactions\": []\n}"
						}
					]
				},
				{
					"name": "Get all transactions by recipient",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/transactions/recipient/:recipient?page=1&size=2",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"transactions",
								"recipient",
								":recipient"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "2"
								}
							],
							"variable": [
								{
									"key": "recipient",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get all recipients",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{localhost}}/api/recipients",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"api",
						"recipients"
					]
				}
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/recipients",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"recipients"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Sep 2023 13:25:35 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 1,\n        \"firstName\": \"Jemimah\",\n        \"lastName\": \"MacShane\",\n        \"routingNumber\": \"326047655\",\n        \"nationalIdNumber\": \"094375570\",\n        \"accountNumber\": \"2792399946\",\n        \"accountCurrency\": \"USD\",\n        \"bankName\": \"Ledner and Sons Bank\",\n        \"transactions\": []\n    },\n    {\n        \"id\": 2,\n        \"firstName\": \"Brade\",\n        \"lastName\": \"Hengerty\",\n        \"routingNumber\": \"840691711\",\n        \"nationalIdNumber\": \"960308703\",\n        \"accountNumber\": \"9648362398\",\n        \"accountCurrency\": \"USD\",\n        \"bankName\": \"Flatley Bank\",\n        \"transactions\": []\n    },\n    {\n        \"id\": 3,\n        \"firstName\": \"Doretta\",\n        \"lastName\": \"Pleven\",\n        \"routingNumber\": \"752068116\",\n        \"nationalIdNumber\": \"396421045\",\n        \"accountNumber\": \"0172336048\",\n        \"accountCurrency\": \"USD\",\n        \"bankName\": \"Rutherford Bank\",\n        \"transactions\": []\n    },\n    {\n        \"id\": 4,\n        \"firstName\": \"Chan\",\n        \"lastName\": \"Beynkn\",\n        \"routingNumber\": \"664246139\",\n        \"nationalIdNumber\": \"488945922\",\n        \"accountNumber\": \"3064675685\",\n        \"accountCurrency\": \"USD\",\n        \"bankName\": \"McKenzie Bank\",\n        \"transactions\": []\n    },\n    {\n        \"id\": 5,\n        \"firstName\": \"Freida\",\n        \"lastName\": \"Befroy\",\n        \"routingNumber\": \"183515943\",\n        \"nationalIdNumber\": \"946735220\",\n        \"accountNumber\": \"8188534108\",\n        \"accountCurrency\": \"USD\",\n        \"bankName\": \"Kertzmann Bank\",\n        \"transactions\": []\n    }\n]"
				}
			]
		},
		{
			"name": "Save recipients",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"Yvan\",\r\n    \"lastName\": \"Lopez\",\r\n    \"routingNumber\": \"987654321\",\r\n    \"nationalIdNumber\": \"999999999\",\r\n    \"accountNumber\": \"4444444444\",\r\n    \"accountCurrency\": \"USD\",\r\n    \"bankName\": \"BCP Bank\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/api/recipients",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"api",
						"recipients"
					]
				}
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Yvan\",\r\n    \"lastName\": \"Lopez\",\r\n    \"routingNumber\": \"987654321\",\r\n    \"nationalIdNumber\": \"999999999\",\r\n    \"accountNumber\": \"4444444444\",\r\n    \"accountCurrency\": \"USD\",\r\n    \"bankName\": \"BCP Bank\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/api/recipients",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"recipients"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Sep 2023 13:29:56 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 6,\n    \"firstName\": \"Yvan\",\n    \"lastName\": \"Lopez\",\n    \"routingNumber\": \"987654321\",\n    \"nationalIdNumber\": \"999999999\",\n    \"accountNumber\": \"4444444444\",\n    \"accountCurrency\": \"USD\",\n    \"bankName\": \"BCP Bank\",\n    \"transactions\": []\n}"
				},
				{
					"name": "400",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Yvan\",\r\n    \"lastName\": \"Lopez\",\r\n\r\n    \"nationalIdNumber\": \"999999999\",\r\n    \"accountNumber\": \"4444444444\",\r\n    \"accountCurrency\": \"USD\",\r\n    \"bankName\": \"BCP Bank\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/api/recipients",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"recipients"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Sep 2023 13:31:54 GMT"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"timestamp\": \"2023-09-02T13:31:54.043+00:00\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"trace\": \"org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<com.ontop.challenge.backend.apirest.models.Recipient> com.ontop.challenge.backend.apirest.controllers.RecipientRestController.saveRecipient(com.ontop.challenge.backend.apirest.models.Recipient): [Field error in object 'recipient' on field 'routingNumber': rejected value [null]; codes [NotBlank.recipient.routingNumber,NotBlank.routingNumber,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [recipient.routingNumber,routingNumber]; arguments []; default message [routingNumber]]; default message [The routing number can't be empty]] \\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:144)\\r\\n\\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\\r\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\\r\\n\\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)\\r\\n\\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\\r\\n\\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\\r\\n\\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)\\r\\n\\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\\r\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\\r\\n\\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\\r\\n\\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\r\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\r\\n\\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\r\\n\\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\r\\n\\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\r\\n\\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\\r\\n\\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)\\r\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)\\r\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:166)\\r\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\\r\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\\r\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\\r\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\\r\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\\r\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:341)\\r\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\\r\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\\r\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:894)\\r\\n\\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)\\r\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\\r\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\\r\\n\\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\\r\\n\\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\\r\\n\\tat java.base/java.lang.Thread.run(Thread.java:833)\\r\\n\",\n    \"message\": \"Validation failed for object='recipient'. Error count: 1\",\n    \"errors\": [\n        {\n            \"codes\": [\n                \"NotBlank.recipient.routingNumber\",\n                \"NotBlank.routingNumber\",\n                \"NotBlank.java.lang.String\",\n                \"NotBlank\"\n            ],\n            \"arguments\": [\n                {\n                    \"codes\": [\n                        \"recipient.routingNumber\",\n                        \"routingNumber\"\n                    ],\n                    \"arguments\": null,\n                    \"defaultMessage\": \"routingNumber\",\n                    \"code\": \"routingNumber\"\n                }\n            ],\n            \"defaultMessage\": \"The routing number can't be empty\",\n            \"objectName\": \"recipient\",\n            \"field\": \"routingNumber\",\n            \"rejectedValue\": null,\n            \"bindingFailure\": false,\n            \"code\": \"NotBlank\"\n        }\n    ],\n    \"path\": \"/api/recipients\"\n}"
				}
			]
		},
		{
			"name": "Get recipìent by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{localhost}}/api/recipients/1",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"api",
						"recipients",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/api/recipients/1",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"api",
								"recipients",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 02 Sep 2023 13:26:43 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"firstName\": \"Jemimah\",\n    \"lastName\": \"MacShane\",\n    \"routingNumber\": \"326047655\",\n    \"nationalIdNumber\": \"094375570\",\n    \"accountNumber\": \"2792399946\",\n    \"accountCurrency\": \"USD\",\n    \"bankName\": \"Ledner and Sons Bank\",\n    \"transactions\": []\n}"
				}
			]
		}
	]
}